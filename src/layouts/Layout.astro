---
import '@styles/global.css';
import { Icon } from 'astro-icon';

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div id="layout">
			<header>
				<div class="actions">
					<a href="/">
						<Icon name="mdi:home-circle" />
					</a>
					<a href="/settings">
						<Icon name="mdi:cog" />
					</a>
					<a href="/report">
						<Icon name="mdi:clipboard-alert-outline" />
					</a>
				</div>
				<div id="drag-zone">
					<h1>Kao - Der Avatar Browser</h1>
				</div>
				<div class="actions">
					<button id="minimize">
						<Icon name="mdi:window-minimize" />
					</button>
					<button id="maximize">
						<Icon name="mdi:window-maximize" />
					</button>
					<button id="close">
						<Icon name="mdi:close" />
					</button>
				</div>
			</header>
			<main>
				<slot />
			</main>
		</div>
	</body>
</html>

<style>
#layout {
  background-color: var(--color-background);
  border-radius: var(--border-radius);
	border: 1px solid var(--color-background--light);
	overflow: hidden;
	flex-grow: 1;
	display: grid;
	grid-template-areas: "app-header"
											 "app-content";
	grid-template-rows: 2rem calc(100vh - 2rem);
	--layout-gap: .5rem;
}

header {
	display: flex;
	font-size: 1.5rem;
	background-color: var(--color-background--dark);
}

#drag-zone {
	flex: 1 0 auto;
	-webkit-user-select: none;
	-webkit-app-region: drag;
	display: flex;
	padding: var(--layout-gap);
	align-items: center;
	justify-content: center;
}

h1 {
	font-size: 1rem;
}

.actions {
	display: flex;
	gap: var(--layout-gap);
	padding: 0 var(--layout-gap);
}

button:hover {
	color: var(--color-font--dark);
}

main {
  overflow-y: auto;
	padding: var(--layout-gap);
	margin: var(--layout-gap);
}
</style>

<script>
	document.getElementById('minimize')?.addEventListener('click', () => window.ipcRenderer.send("onAppMinimize"));
	document.getElementById('maximize')?.addEventListener('click', () => window.ipcRenderer.send("onAppMaximize"));
	document.getElementById('close')?.addEventListener('click', () => window.ipcRenderer.send("onAppClose"));
</script>